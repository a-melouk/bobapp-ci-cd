name: CI Pipeline

on:
  # Trigger on every commit pushed to main branch (after PR merge)
  # This is the CI run that triggers CD deployment to DockerHub
  push:
    branches: ["main"]
  # Trigger on PR events for validation before merging
  # Runs on every commit in the PR branch (opened, new commits, reopened)
  # This validates code quality before allowing merge
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Detect which components changed to optimize build times
  # Only runs jobs for components that were actually modified
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Detect file changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'back/**'
              - '.github/workflows/ci.yml'
            frontend:
              - 'front/**'
              - '.github/workflows/ci.yml'

  # Backend build and test job
  # Runs only if backend files were changed
  backend-ci:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history required for SonarCloud analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build & test backend
        run: mvn -f back/pom.xml clean verify

  # Frontend build and test job
  # Runs only if frontend files were changed
  frontend-ci:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history required for SonarCloud analysis

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache npm packages
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          cd front
          npm ci

      - name: Build & test frontend
        run: |
          cd front
          npm test -- --watch=false --code-coverage

  # SonarCloud code quality analysis
  # Runs after initial build validation to analyze code quality
  # Rebuilds components with cached dependencies for accurate analysis
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    needs: [detect-changes, backend-ci, frontend-ci]
    # Run if at least one component was built successfully
    # always() ensures this runs even if one job was skipped
    if: |
      always() &&
      (
        needs.backend-ci.result == 'success' ||
        needs.frontend-ci.result == 'success'
      )
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history required for accurate analysis

      # Setup and rebuild backend for SonarCloud analysis
      - name: Set up JDK 11
        if: needs.detect-changes.outputs.backend-changed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        if: needs.detect-changes.outputs.backend-changed == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build backend with coverage for SonarCloud
        if: needs.detect-changes.outputs.backend-changed == 'true'
        run: mvn -f back/pom.xml clean verify

      # Setup and rebuild frontend for SonarCloud analysis
      - name: Set up Node.js
        if: needs.detect-changes.outputs.frontend-changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache npm packages
        if: needs.detect-changes.outputs.frontend-changed == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build frontend with coverage for SonarCloud
        if: needs.detect-changes.outputs.frontend-changed == 'true'
        run: |
          cd front
          npm ci
          npm test -- --watch=false --code-coverage

      # Analyze code quality and coverage with SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
