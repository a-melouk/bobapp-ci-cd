name: CI Pipeline

on:
  # Run CI only when PRs are merged to main (triggers CD)
  push:
    branches: ["main"]
  # Run CI on PR events for all branch validation (develop, feature/*, etc.)
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Detect which components changed to optimize build times
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'back/**'
              - '.github/workflows/ci.yml'
            frontend:
              - 'front/**'
              - '.github/workflows/ci.yml'

  # Backend build and test job
  backend-ci:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for SonarCloud PR analysis

      - uses: actions/setup-java@v4
        with:
          java-version: "11"
          distribution: "temurin"

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build & test backend
        run: mvn -f back/pom.xml clean verify

  # Frontend build and test job
  frontend-ci:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for SonarCloud PR analysis

      - uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build & test frontend
        run: |
          cd front
          npm ci
          npm test -- --watch=false --code-coverage

  # SonarCloud analysis (runs after successful component builds)
  sonarcloud-analysis:
    runs-on: ubuntu-latest
    needs: [detect-changes, backend-ci, frontend-ci]
    # Run this job if:
    # - The workflow is not cancelled (always())
    # - At least one of the backend or frontend jobs succeeded
    # - Skip if both components were skipped (no changes to analyze)
    if: |
      always() &&
      (
        needs.backend-ci.result == 'success' ||
        needs.frontend-ci.result == 'success'
      )
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for SonarCloud PR analysis

      # Setup environments for rebuilding artifacts
      - uses: actions/setup-java@v4
        if: needs.detect-changes.outputs.backend-changed == 'true'
        with:
          java-version: "11"
          distribution: "temurin"

      - uses: actions/setup-node@v4
        if: needs.detect-changes.outputs.frontend-changed == 'true'
        with:
          node-version: "18"

      # Cache Maven dependencies for potential backend rebuild
      - name: Cache Maven packages
        if: needs.detect-changes.outputs.backend-changed == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Cache npm dependencies for potential frontend rebuild
      - name: Cache npm
        if: needs.detect-changes.outputs.frontend-changed == 'true'
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Rebuild backend artifacts for SonarCloud analysis
      - name: Rebuild backend for analysis
        if: needs.detect-changes.outputs.backend-changed == 'true'
        run: mvn -f back/pom.xml clean verify

      # Rebuild frontend artifacts for SonarCloud analysis
      - name: Rebuild frontend for analysis
        if: needs.detect-changes.outputs.frontend-changed == 'true'
        run: |
          cd front
          npm ci
          npm test -- --watch=false --code-coverage

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v6
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
